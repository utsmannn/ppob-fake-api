{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"endpoint/","title":"Endpoint","text":""},{"location":"endpoint/#overview","title":"Overview","text":"<p>Welcome to the PPOB API documentation. This API provides various endpoints to manage user authentication, product listing, balance transactions, and product transactions.</p> <p>Server URL:</p> <pre><code>https://ppob-fake-api.fly.dev\n</code></pre> <p>API Version: <code>1.0.0</code></p>"},{"location":"endpoint/#user","title":"User","text":""},{"location":"endpoint/#login","title":"Login","text":"<p>POST <code>/api/v1/login</code></p> <ul> <li>Summary: Login with your account</li> <li>Tags: User</li> </ul> Content Example Request BodyResponse Name Type Required Description password string Yes User's password phone string Yes User's phone number <pre><code>{\n  \"password\": \"your_password\",\n  \"phone\": \"1234567890\"\n}\n</code></pre> Name Type Required Description message string Yes Response message status boolean Yes Status of the login operation data object Yes Login data token string Yes Authentication token <pre><code>{\n  \"message\": \"Login successful\",\n  \"status\": true,\n  \"data\": {\n    \"token\": \"your_jwt_token\"\n  }\n}\n</code></pre> Request Example <pre><code>curl --location --request POST 'https://ppob-fake-api.fly.dev/api/v1/login' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"password\": \"string\",\n    \"phone\": \"string\"\n}'\n</code></pre>"},{"location":"endpoint/#register","title":"Register","text":"<p>POST <code>/api/v1/register</code></p> <ul> <li>Summary: Register new account</li> <li>Tags: User</li> </ul> Content Example Request BodyResponse Name Type Required Description name string Yes User's name phone string Yes User's phone number password string Yes User's password <pre><code>{\n  \"name\": \"John Doe\",\n  \"phone\": \"1234567890\",\n  \"password\": \"your_password\"\n}\n</code></pre> Name Type Required Description message string Yes Response message status boolean Yes Status of the registration data string Yes Registration data <pre><code>{\n  \"message\": \"Registration successful\",\n  \"status\": true,\n  \"data\": \"User registered\"\n}\n</code></pre> Request Example <pre><code>curl --location --request POST 'https://ppob-fake-api.fly.dev/api/v1/register' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"name\": \"string\",\n    \"phone\": \"string\",\n    \"password\": \"string\"\n}'\n</code></pre>"},{"location":"endpoint/#get-user-information","title":"Get User Information","text":"<p>GET <code>/api/v1/user</code></p> <ul> <li>Summary: Get user information</li> <li>Tags: User</li> </ul> Content Example Header ParameterResponse Name In Type Required Description Authorization header string Yes Bearer token for authorization Name Type Required Description message string Yes Response message status boolean Yes Status of the operation data object Yes User data id string Yes User ID name string Yes User's name phone string Yes User's phone number balance integer Yes User's balance last_update_balance string Yes Last update time of the balance <pre><code>{\n  \"message\": \"User data retrieved successfully\",\n  \"status\": true,\n  \"data\": {\n    \"id\": \"user_id\",\n    \"name\": \"John Doe\",\n    \"phone\": \"1234567890\",\n    \"balance\": 100000,\n    \"last_update_balance\": \"2024-08-24T10:00:00Z\"\n  }\n}\n</code></pre> Request Example <pre><code>curl --location --request GET 'https://ppob-fake-api.fly.dev/api/v1/user' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTcyNDQ4NDI1NSwianRpIjoiMWQ0NmIyZjItZTVmNS00ZjE1LThiZjUtOWRjNDYzOTlhNmI2IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImU2YzAyZDFmLWRiOGItNGM4NS1iNjdjLWVmMDYzYzlkOGViMiIsIm5iZiI6MTcyNDQ4NDI1NSwiY3NyZiI6IjIwMzJhYTVjLWMyZDgtNGM2Mi1hNWQxLWQ0Nzk5M2FiNTA0ZSIsImV4cCI6MTcyNDU3MDY1NX0.4NlV9KSzceHFPstFTr073Lo5V5i4_1q1KNBnkLYDFaI' \\\n</code></pre>"},{"location":"endpoint/#product","title":"Product","text":""},{"location":"endpoint/#get-all-product-postpaid","title":"Get All Product Postpaid","text":"<p>GET <code>/api/v1/product</code></p> <ul> <li>Summary: Get All product list of postpaid (single shot payment point without inquiry recipient)</li> <li>Tags: Product</li> <li>Authentication: No</li> </ul> Content Example Query ParameterResponse Name In Type Required Description category query string No Category of the product search query string No Search term for product name Name Type Required Description message string Yes Response message status boolean Yes Status of the operation data array Yes List of products id integer Yes Product ID code string Yes Product code name string Yes Product name category string Yes Product category sub_category string Yes Product sub-category description string Yes Product description nominal integer Yes Product nominal value admin_fee integer Yes Administrative fee service_fee integer Yes Service fee status string Yes Product status <pre><code>{\n  \"message\": \"Products retrieved successfully\",\n  \"status\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"code\": \"PROD001\",\n      \"name\": \"Product 1\",\n      \"category\": \"PULSA\",\n      \"sub_category\": \"TELKOMSEL\",\n      \"description\": \"Pulsa Telkomsel 10K\",\n      \"nominal\": 10000,\n      \"admin_fee\": 1500,\n      \"service_fee\": 500,\n      \"status\": \"active\"\n    },\n    {\n      \"id\": 2,\n      \"code\": \"PROD002\",\n      \"name\": \"Product 2\",\n      \"category\": \"PULSA\",\n      \"sub_category\": \"INDOSAT\",\n      \"description\": \"Pulsa Indosat 10K\",\n      \"nominal\": 10000,\n      \"admin_fee\": 1500,\n      \"service_fee\": 500,\n      \"status\": \"active\"\n    }\n  ]\n}\n</code></pre> Request Example <pre><code>curl --location --request GET 'https://ppob-fake-api.fly.dev/api/v1/product' \\\n</code></pre>"},{"location":"endpoint/#get-all-product-prepaid","title":"Get All Product Prepaid","text":"<p>GET <code>/api/v1/product/prepaid</code></p> <ul> <li>Summary: Get All product list of prepaid (payment point with inquiry recipient account)</li> <li>Tags: Product</li> </ul> Content Example Query ParameterResponse Name In Type Required Description category query string No Category of the product search query string No Search term for product name Name Type Required Description message string Yes Response message status boolean Yes Status of the operation data array Yes List of prepaid products id integer Yes Product ID code string Yes Product code name string Yes Product name category string Yes Product category sub_category string Yes Product sub-category description string Yes Product description nominal string no Product nominal value (nullable) admin_fee integer Yes Administrative fee service_fee integer Yes Service fee status string Yes Product status <pre><code>{\n  \"message\": \"Prepaid products retrieved successfully\",\n  \"status\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"code\": \"PROD_PRE_001\",\n      \"name\": \"Prepaid Product 1\",\n      \"category\": \"PDAM\",\n      \"sub_category\": \"JAKARTA\",\n      \"description\": \"PDAM Jakarta\",\n      \"nominal\": null,\n      \"admin_fee\": 2500,\n      \"service_fee\": 1000,\n      \"status\": \"active\"\n    }\n  ]\n}\n</code></pre> Request Example <pre><code>curl --location --request GET 'https://ppob-fake-api.fly.dev/api/v1/product/prepaid' \\\n</code></pre>"},{"location":"endpoint/#get-all-category-available","title":"Get All Category Available","text":"<p>GET <code>/api/v1/category</code></p> <ul> <li>Summary: Get Product Category list</li> <li>Tags: Product</li> </ul> Content Example Response Name Type Required Description message string Yes Response message status boolean Yes Status of the operation data array Yes List of product categories <pre><code>{\n  \"message\": \"Product categories retrieved successfully\",\n  \"status\": true,\n  \"data\": [\n    {\n      \"category\": \"PULSA\",\n      \"sub_category\": [\"TELKOMSEL\", \"INDOSAT\", \"XL\"]\n    },\n    {\n      \"category\": \"DATA\",\n      \"sub_category\": [\"TELKOMSEL\", \"INDOSAT\", \"XL\"]\n    },\n    {\n      \"category\": \"PDAM\",\n      \"sub_category\": [\"JAKARTA\", \"BANDUNG\", \"SURABAYA\"]\n    }\n  ]\n}\n</code></pre> Request Example <pre><code>curl --location --request GET 'https://ppob-fake-api.fly.dev/api/v1/category' \\\n</code></pre>"},{"location":"endpoint/#balance-transaction","title":"Balance Transaction","text":""},{"location":"endpoint/#topup-your-balance-account","title":"Topup Your Balance Account","text":"<p>POST <code>/api/v1/topup_balance</code></p> <ul> <li>Summary: Top up Balance with payment simulation by Xendit Test Environment</li> <li>Tags: Balance Transaction</li> </ul> Content Example Header ParameterRequest BodyResponse Name In Type Required Description Authorization header string Yes Bearer token for authorization Name Type Required Description amount string Yes Amount of top-up to balance <pre><code>{\n  \"amount\": \"100000\"\n}\n</code></pre> Name Type Required Description message string Yes Response message status boolean Yes Status of the top-up operation data object Yes Top-up data id string Yes Top-up transaction ID user_id string Yes User ID external_id string Yes External ID from payment gateway invoice_url string Yes URL of the payment link by Xendit status string Yes Status of the transaction (PENDING, PAID) amount integer Yes Total amount (nominal + admin fee + service fee) expired_date string Yes Expiration date of the payment <pre><code>{\n  \"message\": \"Top-up successful\",\n  \"status\": true,\n  \"data\": {\n    \"id\": \"topup_id\",\n    \"user_id\": \"user_id\",\n    \"external_id\": \"external_id\",\n    \"invoice_url\": \"https://payment.link\",\n    \"status\": \"PENDING\",\n    \"amount\": 103000,\n    \"expired_date\": \"2024-08-25T10:00:00Z\"\n  }\n}\n</code></pre> Request Example <pre><code>curl --location --request POST 'https://ppob-fake-api.fly.dev/api/v1/topup_balance' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTcyNDQ4NDI1NSwianRpIjoiMWQ0NmIyZjItZTVmNS00ZjE1LThiZjUtOWRjNDYzOTlhNmI2IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImU2YzAyZDFmLWRiOGItNGM4NS1iNjdjLWVmMDYzYzlkOGViMiIsIm5iZiI6MTcyNDQ4NDI1NSwiY3NyZiI6IjIwMzJhYTVjLWMyZDgtNGM2Mi1hNWQxLWQ0Nzk5M2FiNTA0ZSIsImV4cCI6MTcyNDU3MDY1NX0.4NlV9KSzceHFPstFTr073Lo5V5i4_1q1KNBnkLYDFaI' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"amount\": \"string\"\n}'\n</code></pre>"},{"location":"endpoint/#get-topup-balance-history","title":"Get Topup Balance History","text":"<p>GET <code>/api/v1/balance_invoice</code></p> <ul> <li>Summary: Get all topup balance history of your account</li> <li>Tags: Balance Transaction</li> </ul> Content Example Header ParameterResponse Name In Type Required Description Authorization header string Yes Bearer token for authorization Name Type Required Description message string Yes Response message status boolean Yes Status of the operation data array Yes List of top-up transactions id string Yes Transaction ID user_id string Yes User ID external_id string Yes External ID from payment gateway invoice_url string Yes URL of the payment link by Xendit status string Yes Status of the transaction (PENDING, PAID) amount integer Yes Total amount of the transaction expired_date string Yes Expiration date of the transaction <pre><code>{\n  \"message\": \"Top-up history retrieved successfully\",\n  \"status\": true,\n  \"data\": [\n    {\n      \"id\": \"topup_id_1\",\n      \"user_id\": \"user_id_1\",\n      \"external_id\": \"external_id_1\",\n      \"invoice_url\": \"https://payment.link\",\n      \"status\": \"PAID\",\n      \"amount\": 103000,\n      \"expired_date\": \"2024-08-25T10:00:00Z\"\n    }\n  ]\n}\n</code></pre> Request Example <pre><code>curl --location --request GET 'https://ppob-fake-api.fly.dev/api/v1/balance_invoice' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTcyNDQ4NDI1NSwianRpIjoiMWQ0NmIyZjItZTVmNS00ZjE1LThiZjUtOWRjNDYzOTlhNmI2IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImU2YzAyZDFmLWRiOGItNGM4NS1iNjdjLWVmMDYzYzlkOGViMiIsIm5iZiI6MTcyNDQ4NDI1NSwiY3NyZiI6IjIwMzJhYTVjLWMyZDgtNGM2Mi1hNWQxLWQ0Nzk5M2FiNTA0ZSIsImV4cCI6MTcyNDU3MDY1NX0.4NlV9KSzceHFPstFTr073Lo5V5i4_1q1KNBnkLYDFaI' \\\n</code></pre>"},{"location":"endpoint/#product-transaction","title":"Product Transaction","text":""},{"location":"endpoint/#request-new-transaction","title":"Request New Transaction","text":"<p>POST <code>/api/v1/transaction</code></p> <ul> <li>Summary: Preliminary step that validates and prepares the transaction details before the actual execution,   ensuring all conditions are met before processing.</li> <li>Tags: Product Transaction</li> </ul> Content Example Header ParameterRequest BodyResponse Name In Type Required Description Authorization header string Yes Bearer token for authorization Name Type Required Description product_code string Yes Code of the product recipient_number string Yes Recipient's number <pre><code>{\n  \"product_code\": \"PROD001\",\n  \"recipient_number\": \"1234567890\"\n}\n</code></pre> Name Type Required Description message string Yes Response message status boolean Yes Status of the transaction request data object Yes Transaction data id string Yes Transaction ID product_code string Yes Product code user_id string Yes User ID amount integer Yes Amount of the transaction date string Yes Transaction date status string Yes Status of the transaction recipient_number string Yes Recipient's number prepaid_account object Yes Prepaid account information merchant_account object No Merchant account information, only from QRIS description string Yes Description of the transaction <pre><code>{\n  \"message\": \"Transaction requested successfully\",\n  \"status\": true,\n  \"data\": {\n    \"id\": \"transaction_id\",\n    \"product_code\": \"PROD001\",\n    \"user_id\": \"user_id\",\n    \"amount\": 105000,\n    \"date\": \"2024-08-24T10:00:00Z\",\n    \"status\": \"PENDING\",\n    \"recipient_number\": \"1234567890\",\n    \"prepaid_account\": {\n      \"name\": \"John Doe\",\n      \"number\": \"1234567890\"\n    },\n    \"merchant_account\": null,\n    \"description\": \"Pulsa Telkomsel 10K\"\n  }\n}\n</code></pre> Request Example <pre><code>curl --location --request POST 'https://ppob-fake-api.fly.dev/api/v1/transaction' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTcyNDQ4NDI1NSwianRpIjoiMWQ0NmIyZjItZTVmNS00ZjE1LThiZjUtOWRjNDYzOTlhNmI2IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImU2YzAyZDFmLWRiOGItNGM4NS1iNjdjLWVmMDYzYzlkOGViMiIsIm5iZiI6MTcyNDQ4NDI1NSwiY3NyZiI6IjIwMzJhYTVjLWMyZDgtNGM2Mi1hNWQxLWQ0Nzk5M2FiNTA0ZSIsImV4cCI6MTcyNDU3MDY1NX0.4NlV9KSzceHFPstFTr073Lo5V5i4_1q1KNBnkLYDFaI' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"product_code\": \"string\",\n    \"recipient_number\": \"string\"\n}'\n</code></pre>"},{"location":"endpoint/#request-new-qris-transaction","title":"Request New QRIS Transaction","text":"<p>POST <code>/api/v1/transaction/qris</code></p> <ul> <li>Summary: Using QRIS for preliminary step that validates and prepares the transaction details before the actual   execution, ensuring all conditions are met before processing.</li> <li>Tags: Product Transaction</li> </ul> Content Example Header ParameterRequest BodyResponse Name In Type Required Description Authorization header string Yes Bearer token for authorization Name Type Required Description content string Yes Content of QRIS amount string No Amount you needed, if amount include in QRIS, you no need this <pre><code>{\n  \"content\": \"00020101021126550016ID.CO.SHOPEE.WWW01189360091800000000180202180303UBE51440014ID.CO.QRIS.WWW0215ID20190022915550303UBE5204839853033605802ID5906Baznas6013Jakarta Pusat61051034062070703A016304A402\",\n  \"amount\": \"20000\"\n}\n</code></pre> Name Type Required Description message string Yes Response message status boolean Yes Status of the transaction request data object Yes Transaction data id string Yes Transaction ID product_code string Yes Product code user_id string Yes User ID amount integer Yes Amount of the transaction date string Yes Transaction date status string Yes Status of the transaction recipient_number string No Recipient's number prepaid_account object No Prepaid account information merchant_account object Yes Merchant account information, only from QRIS description string Yes Description of the transaction <pre><code>{\n  \"message\": \"Transaction requested successfully\",\n  \"status\": true,\n  \"data\": {\n    \"id\": \"transaction_id\",\n    \"product_code\": \"QRIS\",\n    \"user_id\": \"user_id\",\n    \"amount\": 20000,\n    \"date\": \"2024-08-24T10:00:00Z\",\n    \"status\": \"PENDING\",\n    \"recipient_number\": null,\n    \"prepaid_account\": null,\n    \"merchant_account\": {\n      \"id\": \"ID2019002291555\",\n      \"name\": \"Baznas\",\n      \"city\": \"Jakarta Pusat\"\n    },\n    \"description\": \"Pulsa Telkomsel 10K\"\n  }\n}\n</code></pre> Request Example <pre><code>curl --location --request POST 'https://ppob-fake-api.fly.dev/api/v1/transaction' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTcyNDQ4NDI1NSwianRpIjoiMWQ0NmIyZjItZTVmNS00ZjE1LThiZjUtOWRjNDYzOTlhNmI2IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImU2YzAyZDFmLWRiOGItNGM4NS1iNjdjLWVmMDYzYzlkOGViMiIsIm5iZiI6MTcyNDQ4NDI1NSwiY3NyZiI6IjIwMzJhYTVjLWMyZDgtNGM2Mi1hNWQxLWQ0Nzk5M2FiNTA0ZSIsImV4cCI6MTcyNDU3MDY1NX0.4NlV9KSzceHFPstFTr073Lo5V5i4_1q1KNBnkLYDFaI' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"product_code\": \"string\",\n    \"recipient_number\": \"string\"\n}'\n</code></pre>"},{"location":"endpoint/#execute-transaction","title":"Execute Transaction","text":"<p>POST <code>/api/v1/transaction/execute</code></p> <ul> <li>Summary: After you created the transaction, you must execute with your password and impacted to your balance</li> <li>Tags: Product Transaction</li> </ul> Content Example Header ParameterRequest BodyResponse Body Name In Type Required Description Authorization header string Yes Bearer token for authorization Name Type Required Description transaction_id string Yes Id of transaction password string Yes Your password account <pre><code>{\n  \"transaction_id\": \"qwerty\",\n  \"password\": \"12345\"\n}\n</code></pre> Name Type Required Description message string Yes Response message status boolean Yes Status of the transaction execution data object Yes Transaction data id string Yes Transaction ID product_code string Yes Product code user_id string Yes User ID amount integer Yes Amount of the transaction date string Yes Transaction date status string Yes Status of the transaction recipient_number string Yes Recipient's number prepaid_account object No Prepaid account information (if applicable) merchant_account object No Merchant account information, only from QRIS description string Yes Description of the transaction <pre><code>{\n  \"message\": \"Transaction executed successfully\",\n  \"status\": true,\n  \"data\": {\n    \"id\": \"transaction_id\",\n    \"product_code\": \"PROD001\",\n    \"user_id\": \"user_id\",\n    \"amount\": 105000,\n    \"date\": \"2024-08-24T10:00:00Z\",\n    \"status\": \"COMPLETED\",\n    \"recipient_number\": \"1234567890\",\n    \"prepaid_account\": {\n      \"name\": \"John Doe\",\n      \"number\": \"1234567890\"\n    },\n    \"description\": \"Pulsa Telkomsel 10K\"\n  }\n}\n</code></pre> Request Example <pre><code>curl --location --request POST 'https://ppob-fake-api.fly.dev/api/v1/transaction/execute' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTcyNDQ4NDI1NSwianRpIjoiMWQ0NmIyZjItZTVmNS00ZjE1LThiZjUtOWRjNDYzOTlhNmI2IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImU2YzAyZDFmLWRiOGItNGM4NS1iNjdjLWVmMDYzYzlkOGViMiIsIm5iZiI6MTcyNDQ4NDI1NSwiY3NyZiI6IjIwMzJhYTVjLWMyZDgtNGM2Mi1hNWQxLWQ0Nzk5M2FiNTA0ZSIsImV4cCI6MTcyNDU3MDY1NX0.4NlV9KSzceHFPstFTr073Lo5V5i4_1q1KNBnkLYDFaI' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"transaction_id\": \"string\",\n    \"password\": \"string\"\n}'\n</code></pre>"},{"location":"endpoint/#get-all-history-transaction","title":"Get All History Transaction","text":"<p>GET <code>/api/v1/transaction</code></p> <ul> <li>Summary: Get all transaction history</li> <li>Tags: Product Transaction</li> </ul> Content Example Header ParameterResponse Name In Type Required Description Authorization header string Yes Bearer token for authorization Name Type Required Description message string Yes Response message status boolean Yes Status of the operation data array Yes List of transactions id string Yes Transaction ID product_code string Yes Product code user_id string Yes User ID amount integer Yes Amount of the transaction date string Yes Transaction date status string Yes Status of the transaction recipient_number string No Recipient's number prepaid_account object No Prepaid account information (if applicable) merchant_account object No Merchant account information, only from QRIS description string Yes Description of the transaction Request Example <pre><code>curl --location --request GET 'https://ppob-fake-api.fly.dev/api/v1/transaction' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTcyNDQ4NDI1NSwianRpIjoiMWQ0NmIyZjItZTVmNS00ZjE1LThiZjUtOWRjNDYzOTlhNmI2IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImU2YzAyZDFmLWRiOGItNGM4NS1iNjdjLWVmMDYzYzlkOGViMiIsIm5iZiI6MTcyNDQ4NDI1NSwiY3NyZiI6IjIwMzJhYTVjLWMyZDgtNGM2Mi1hNWQxLWQ0Nzk5M2FiNTA0ZSIsImV4cCI6MTcyNDU3MDY1NX0.4NlV9KSzceHFPstFTr073Lo5V5i4_1q1KNBnkLYDFaI' \\\n</code></pre>"},{"location":"","title":"Payment Point Online Banking Fake REST API","text":"<p>Welcome to the PPOB (Payment Point Online Banking / Bill Payment Service) API documentation. This API provides various endpoints to manage user authentication, product listing, balance transactions, and product transactions.</p> <p>Stop searching for the perfect API for your project practice. Start using this API, as it is built on real industry insights.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>User authentication with JWT</li> <li>Products list</li> <li>Balance and topup</li> <li>Simulator Payment for topup balance</li> <li>Product Transaction</li> </ul> <p> Github</p> <p> Read Documentation</p>"},{"location":"payment-simulation/","title":"Payment Simulation","text":"<p>In this API, the \"payment\" for top-up balance is a Fake Payment using the Xendit Test Environment. This Fake Payment can be used to test and validate the top-up flow without executing a real transaction. Here\u2019s a specific explanation:</p>"},{"location":"payment-simulation/#top-up-balance-api","title":"Top-Up Balance API","text":"<p>In the top-up balance API, a \"fake payment\" allows developers to send a top-up request using a simulated payment method. Although this request is processed by the API just like a real top-up request, no actual money is transferred, and the transaction is not continued with the payment gateway.</p>"},{"location":"payment-simulation/#key-points","title":"Key Points","text":"<p>Purpose: To enable testing of the full top-up flow, including transaction creation, validation, status updates, and response handling, without involving real money.</p> <p>Impact: This is only a simulation, so the user\u2019s balance will not actually increase, and no connection to a payment gateway is made.</p> <p>In the context of using the top-up balance API with a \"fake payment\" method, the user needs to follow these steps to complete the simulation:</p>"},{"location":"payment-simulation/#simulation-steps-for-fake-payment","title":"Simulation Steps for Fake Payment","text":"Visit the Payment URLSimulate the PaymentCheck Account Balance and Invoice Status <p>After initiating a top-up request (<code>POST /api/v1/topup_balance</code>), the response will include an invoice_url. The user must go to the provided <code>invoice_url</code> to simulate the payment process.</p> <p></p> <p>On the payment page, follow the instructions to complete the fake payment. After the simulated payment is completed, the page will redirect to a blank page with the message \"Thank you for your payment\".</p> <p></p> <p>After seeing the \"Thank you for your payment\" message, the user's account balance will be updated. The status of the top-up invoice will change to \"PAID\". This simulation allows the user to test the full payment flow as if it were a real transaction, ensuring that the top-up process is working correctly within the API.</p>"},{"location":"qris/","title":"QRIS Information","text":"<p>Before you make a transaction using QRIS on the POST <code>/api/v1/transaction/qris</code>  endpoint, Maybe you need to translate the QRIS code into information to be displayed in your application. That's what I'm for provides a dedicated endpoint and is independent of versioning <code>/api/v1/</code>.</p>"},{"location":"qris/#endpoint-for-get-information","title":"EndPoint for Get Information","text":"<p>GET <code>/qris</code></p> <ul> <li>Summary: Non authentication request for parse QRIS content to data json</li> </ul> Content Example ResponseRequest <pre><code>{\n    \"message\": \"ok\",\n    \"status\": true,\n    \"data\": {\n        \"raw\": \"00020101021126550016ID.CO.SHOPEE.WWW01189360091800000000180202180303UBE51440014ID.CO.QRIS.WWW0215ID20190022915550303UBE5204839853033605802ID5906Baznas6013Jakarta Pusat61051034062070703A016304A402\",\n        \"format_indicator\": \"01\",\n        \"initiation_method\": \"11\",\n        \"amount\": \"\",\n        \"merchant_name\": \"Baznas\",\n        \"merchant_city\": \"Jakarta Pusat\",\n        \"country_code\": \"ID\",\n        \"postal_code\": \"10340\",\n        \"merchant_account_1\": {\n            \"identifier\": \"ID.CO.SHOPEE.WWW\",\n            \"merchant_id\": \"18\",\n            \"merchant_pan\": \"936009180000000018\",\n            \"merchant_criteria\": \"UBE\"\n        },\n        \"merchant_account_2\": {\n            \"identifier\": \"ID.CO.QRIS.WWW\",\n            \"merchant_id\": \"ID2019002291555\",\n            \"merchant_pan\": \"\",\n            \"merchant_criteria\": \"UBE\"\n        },\n        \"additional_info\": {\n            \"reference_label\": \"\",\n            \"terminal_label\": \"A01\",\n            \"payment_system_specified_template\": \"\"\n        },\n        \"crc\": \"A402\"\n    }\n}\n</code></pre> <pre><code>curl --location --request GET 'https://ppob-fake-api.fly.dev/qris?content=00020101021126550016ID.CO.SHOPEE.WWW01189360091800000000180202180303UBE51440014ID.CO.QRIS.WWW0215ID20190022915550303UBE5204839853033605802ID5906Baznas6013Jakarta Pusat61051034062070703A016304A402' \\\n</code></pre>"},{"location":"qris/#qris-structure-for-parsing-and-explanation","title":"QRIS Structure for Parsing and Explanation","text":"<p>QRIS (Quick Response Code Indonesian Standard) is a QR code standard used in Indonesia to facilitate digital payments. The QRIS structure follows the EMVCo format, which includes various data elements parsed from the QR code. Below is the general QRIS structure and the explanation of each element:</p>"},{"location":"qris/#1-payload-format-indicator-id-00","title":"1. Payload Format Indicator (ID 00)","text":"<ul> <li>Format: Two digits</li> <li>Description: The format version indicator, usually \"01\" for QRIS.</li> </ul>"},{"location":"qris/#2-point-of-initiation-method-id-01","title":"2. Point of Initiation Method (ID 01)","text":"<ul> <li>Format: Two digits</li> <li>Description: The method of initiation, \"11\" for a static QR (used for multiple transactions) or \"12\" for a dynamic   QR (used for a single transaction).</li> </ul>"},{"location":"qris/#3-merchant-account-information-id-26-51","title":"3. Merchant Account Information (ID 26-51)","text":"<ul> <li>Format: Data structure consisting of sub-elements</li> <li>Description: Information related to the merchant's account, which may include several sub-elements, such as:<ul> <li>ID 00: Globally Unique Identifier (GUID) for the merchant.</li> <li>ID 01: Merchant ID number.</li> <li>ID 02: Merchant PAN (Primary Account Number).</li> <li>ID 03: Specific merchant criteria.</li> </ul> </li> </ul>"},{"location":"qris/#4-merchant-category-code-id-52","title":"4. Merchant Category Code (ID 52)","text":"<ul> <li>Format: Four digits</li> <li>Description: The code representing the merchant's business category (e.g., 5311 for supermarkets).</li> </ul>"},{"location":"qris/#5-transaction-currency-id-53","title":"5. Transaction Currency (ID 53)","text":"<ul> <li>Format: Three digits</li> <li>Description: The transaction currency code, usually \"360\" for IDR (Indonesian Rupiah).</li> </ul>"},{"location":"qris/#6-transaction-amount-id-54","title":"6. Transaction Amount (ID 54)","text":"<ul> <li>Format: Numeric value</li> <li>Description: The transaction amount, which may be empty for static QR.</li> </ul>"},{"location":"qris/#7-tip-or-convenience-fee-indicator-id-55","title":"7. Tip or Convenience Fee Indicator (ID 55)","text":"<ul> <li>Format: Two digits</li> <li>Description: The indicator for tip or service fee.</li> </ul>"},{"location":"qris/#8-country-code-id-58","title":"8. Country Code (ID 58)","text":"<ul> <li>Format: Two characters</li> <li>Description: The country code, usually \"ID\" for Indonesia.</li> </ul>"},{"location":"qris/#9-merchant-name-id-59","title":"9. Merchant Name (ID 59)","text":"<ul> <li>Format: String (alphanumeric)</li> <li>Description: The name of the merchant.</li> </ul>"},{"location":"qris/#10-merchant-city-id-60","title":"10. Merchant City (ID 60)","text":"<ul> <li>Format: String (alphanumeric)</li> <li>Description: The city where the merchant is located.</li> </ul>"},{"location":"qris/#11-postal-code-id-61","title":"11. Postal Code (ID 61)","text":"<ul> <li>Format: String (alphanumeric)</li> <li>Description: The postal code of the merchant's location.</li> </ul>"},{"location":"qris/#12-additional-data-field-template-id-62","title":"12. Additional Data Field Template (ID 62)","text":"<ul> <li>Format: Data structure consisting of sub-elements</li> <li>Description: Additional information that may be required, such as:<ul> <li>ID 01: Reference label.</li> <li>ID 05: Terminal label.</li> <li>ID 07: User label.</li> </ul> </li> </ul>"},{"location":"qris/#13-crc-id-63","title":"13. CRC (ID 63)","text":"<ul> <li>Format: Four hexadecimal digits</li> <li>Description: Cyclic Redundancy Check (CRC) for data integrity validation.</li> </ul>"},{"location":"qris/#additional-explanation","title":"Additional Explanation:","text":"<ol> <li> <p>Use of IDs and Sub-IDs: The QRIS structure uses IDs to mark different data elements, and some elements like    Merchant Account Information and Additional Data Field Template may have sub-IDs.</p> </li> <li> <p>Data Length: Each ID is followed by two digits indicating the length of the data in characters, followed by the    actual data. For example, <code>010211</code> means ID 01 (Point of Initiation Method) has 02 characters with the value \"11\".</p> </li> <li> <p>Parsing: To parse QRIS, the process involves reading the ID, extracting the data length, and then capturing the    corresponding data. The data can then be further processed or displayed as needed.</p> </li> </ol>"},{"location":"qris/#parsing-step","title":"Parsing Step","text":""},{"location":"qris/#pseudo-code-explanation","title":"Pseudo Code Explanation","text":"<pre><code>function qris_processor(result: dict) -&gt; QrisData:\n    initialize qris_data as new QrisData object\n\n    define mapping as dictionary with:\n        \"00\" -&gt; \"format_indicator\"\n        \"01\" -&gt; \"initiation_method\"\n        \"54\" -&gt; \"amount\"\n        \"59\" -&gt; \"merchant_name\"\n        \"60\" -&gt; \"merchant_city\"\n        \"58\" -&gt; \"country_code\"\n        \"61\" -&gt; \"postal_code\"\n        \"26-00\" -&gt; \"merchant_account_1.identifier\"\n        \"26-01\" -&gt; \"merchant_account_1.merchant_pan\"\n        \"26-02\" -&gt; \"merchant_account_1.merchant_id\"\n        \"26-03\" -&gt; \"merchant_account_1.merchant_criteria\"\n        \"51-00\" -&gt; \"merchant_account_2.identifier\"\n        \"51-01\" -&gt; \"merchant_account_2.merchant_pan\"\n        \"51-02\" -&gt; \"merchant_account_2.merchant_id\"\n        \"51-03\" -&gt; \"merchant_account_2.merchant_criteria\"\n        \"62-05\" -&gt; \"additional_info.reference_label\"\n        \"62-07\" -&gt; \"additional_info.terminal_label\"\n        \"62-50\" -&gt; \"additional_info.payment_system_specified_template\"\n        \"63\" -&gt; \"crc\"\n\n    for each key-value pair (t, u) in result:\n        if t exists in mapping:\n            split the mapped attribute path into list attr_path\n            set target as qris_data\n\n            for each attribute in attr_path except the last one:\n                update target to point to the corresponding attribute of target\n\n            set the last attribute of target to value u\n\n    return qris_data\n\n\nfunction parse_qris(input_string: str) -&gt; Optional[QrisData]:\n    initialize index as 0\n    initialize result as an empty dictionary\n\n    while index is less than length of input_string:\n        extract qr_id as substring from index to index + 2\n        extract qr_id_length as substring from index + 2 to index + 4\n\n        try to convert qr_id_length to integer qr_id_value_length:\n            if conversion fails, return None\n\n        extract qr_id_value as substring from index + 4 to index + 4 + qr_id_value_length\n        store qr_id_value in result with key qr_id\n\n        if qr_id is between 26 and 40 or in [51, 62]:\n            initialize nested_index as 0\n\n            while nested_index is less than length of qr_id_value:\n                try to extract nested qr_id as substring from nested_index to nested_index + 2\n                extract nqi_length as substring from nested_index + 2 to nested_index + 4\n                convert nqi_length to integer nqi_value_length\n\n                calculate nqi_value_index as nested_index + 4\n                calculate nqi_value_index_offset as nested_index + 4 + nqi_value_length\n\n                extract nqi_value as substring from nqi_value_index to nqi_value_index_offset\n                store nqi_value in result with key \"qr_id-nqi\"\n\n                update nested_index by adding 4 + nqi_value_length\n                if any extraction or conversion fails, return None\n\n        update index by adding 4 + qr_id_value_length\n\n    call qris_processor with result and store the returned object in qris_data\n    set raw attribute of qris_data to input_string\n\n    if qris_data.merchant_account_2.identifier equals 'ID.CO.QRIS.WWW':\n        return qris_data\n    else:\n        return None  # invalid QRIS provider\n</code></pre>"},{"location":"qris/#qris-example","title":"QRIS Example:","text":"<p>Here's a step-by-step explanation for processing the given QRIS code:</p> <p>Given QRIS input: <pre><code>00020101021126550016ID.CO.SHOPEE.WWW01189360091800000000180202180303UBE51440014ID.CO.QRIS.WWW0215ID20190022915550303UBE5204839853033605802ID5906Baznas6013Jakarta Pusat61051034062070703A016304A402\n</code></pre></p>"},{"location":"qris/#1-start-with-parse_qris","title":"1. Start with <code>parse_qris</code>:","text":"<ul> <li>Index starts at <code>0</code>.</li> <li>Result is an empty dictionary.</li> </ul>"},{"location":"qris/#2-processing-qris-step-by-step","title":"2. Processing QRIS step by step:","text":""},{"location":"qris/#iteration-1","title":"Iteration 1:","text":"<ul> <li>qr_id: <code>00</code> (from index <code>0-2</code>)</li> <li>qr_id_length: <code>02</code> (from index <code>2-4</code>)</li> <li>qr_id_value_length: <code>2</code></li> <li>qr_id_value: <code>01</code> (from index <code>4-6</code>)</li> <li> <p>Result: <code>{\"00\": \"01\"}</code></p> </li> <li> <p>Index is now <code>6</code>.</p> </li> </ul>"},{"location":"qris/#iteration-2","title":"Iteration 2:","text":"<ul> <li>qr_id: <code>01</code></li> <li>qr_id_length: <code>02</code></li> <li>qr_id_value_length: <code>2</code></li> <li>qr_id_value: <code>11</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\"}</code></p> </li> <li> <p>Index is now <code>10</code>.</p> </li> </ul>"},{"location":"qris/#iteration-3","title":"Iteration 3:","text":"<ul> <li>qr_id: <code>26</code> (Merchant Account)</li> <li>qr_id_length: <code>55</code></li> <li>qr_id_value_length: <code>55</code></li> <li>qr_id_value: <code>0016ID.CO.SHOPEE.WWW01189360091800000000180202180303UBE</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26\": \"0016ID.CO.SHOPEE.WWW01189360091800000000180202180303UBE\"}</code></p> </li> <li> <p>Index is now <code>69</code>.</p> </li> </ul> <p>Nested Iteration within <code>26</code>:</p> <ul> <li>nqi: <code>00</code></li> <li>nqi_length: <code>16</code></li> <li>nqi_value: <code>ID.CO.SHOPEE.WWW</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26\": \"0016ID.CO.SHOPEE.WWW01189360091800000000180202180303UBE\", \"26-00\": \"ID.CO.SHOPEE.WWW\"}</code></p> </li> <li> <p>nqi: <code>01</code></p> </li> <li>nqi_length: <code>18</code></li> <li>nqi_value: <code>936009180000000018</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\"}</code></p> </li> <li> <p>nqi: <code>02</code></p> </li> <li>nqi_length: <code>02</code></li> <li>nqi_value: <code>18</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\"}</code></p> </li> <li> <p>nqi: <code>03</code></p> </li> <li>nqi_length: <code>03</code></li> <li>nqi_value: <code>UBE</code></li> <li>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\"}</code></li> </ul>"},{"location":"qris/#iteration-4","title":"Iteration 4:","text":"<ul> <li>qr_id: <code>51</code> (Merchant Account 2)</li> <li>qr_id_length: <code>44</code></li> <li>qr_id_value_length: <code>44</code></li> <li>qr_id_value: <code>0014ID.CO.QRIS.WWW0215ID20190022915550303UBE</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51\": \"0014ID.CO.QRIS.WWW0215ID20190022915550303UBE\"}</code></p> </li> <li> <p>Index is now <code>117</code>.</p> </li> </ul> <p>Nested Iteration within <code>51</code>:</p> <ul> <li>nqi: <code>00</code></li> <li>nqi_length: <code>14</code></li> <li>nqi_value: <code>ID.CO.QRIS.WWW</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\"}</code></p> </li> <li> <p>nqi: <code>02</code></p> </li> <li>nqi_length: <code>15</code></li> <li>nqi_value: <code>ID2019002291555</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\"}</code></p> </li> <li> <p>nqi: <code>03</code></p> </li> <li>nqi_length: <code>03</code></li> <li>nqi_value: <code>UBE</code></li> <li>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\"}</code></li> </ul>"},{"location":"qris/#iteration-5","title":"Iteration 5:","text":"<ul> <li>qr_id: <code>52</code></li> <li>qr_id_length: <code>04</code></li> <li>qr_id_value_length: <code>4</code></li> <li>qr_id_value: <code>8398</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\", \"52\": \"8398\"}</code></p> </li> <li> <p>Index is now <code>127</code>.</p> </li> </ul>"},{"location":"qris/#iteration-6","title":"Iteration 6:","text":"<ul> <li>qr_id: <code>53</code></li> <li>qr_id_length: <code>03</code></li> <li>qr_id_value_length: <code>3</code></li> <li>qr_id_value: <code>360</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\", \"52\": \"8398\", \"53\": \"360\"}</code></p> </li> <li> <p>Index is now <code>134</code>.</p> </li> </ul>"},{"location":"qris/#iteration-7","title":"Iteration 7:","text":"<ul> <li>qr_id: <code>58</code></li> <li>qr_id_length: <code>02</code></li> <li>qr_id_value_length: <code>2</code></li> <li>qr_id_value: <code>ID</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\", \"52\": \"8398\", \"53\": \"360\", \"58\": \"ID\"}</code></p> </li> <li> <p>Index is now <code>138</code>.</p> </li> </ul>"},{"location":"qris/#iteration-8","title":"Iteration 8:","text":"<ul> <li>qr_id: <code>59</code></li> <li>qr_id_length: <code>06</code></li> <li>qr_id_value_length: <code>6</code></li> <li>qr_id_value: <code>Baznas</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\", \"52\": \"8398\", \"53\": \"360\", \"58\": \"ID\", \"59\": \"Baznas\"}</code></p> </li> <li> <p>Index is now <code>148</code>.</p> </li> </ul>"},{"location":"qris/#iteration-9","title":"Iteration 9:","text":"<ul> <li> <p>qr_id: <code>60</code></p> </li> <li> <p>qr_id_length: <code>13</code></p> </li> <li>qr_id_value_length: <code>13</code></li> <li>qr_id_value: <code>Jakarta Pusat</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\", \"52\": \"8398\", \"53\": \"360\", \"58\": \"ID\", \"59\": \"Baznas\", \"60\": \"Jakarta Pusat\"}</code></p> </li> <li> <p>Index is now <code>165</code>.</p> </li> </ul>"},{"location":"qris/#iteration-10","title":"Iteration 10:","text":"<ul> <li>qr_id: <code>61</code></li> <li>qr_id_length: <code>05</code></li> <li>qr_id_value_length: <code>5</code></li> <li>qr_id_value: <code>10340</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\", \"52\": \"8398\", \"53\": \"360\", \"58\": \"ID\", \"59\": \"Baznas\", \"60\": \"Jakarta Pusat\", \"61\": \"10340\"}</code></p> </li> <li> <p>Index is now <code>174</code>.</p> </li> </ul>"},{"location":"qris/#iteration-11","title":"Iteration 11:","text":"<ul> <li>qr_id: <code>62</code> (Additional Info)</li> <li>qr_id_length: <code>07</code></li> <li>qr_id_value_length: <code>7</code></li> <li>qr_id_value: <code>03A0163</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\", \"52\": \"8398\", \"53\": \"360\", \"58\": \"ID\", \"59\": \"Baznas\", \"60\": \"Jakarta Pusat\", \"61\": \"10340\", \"62\": \"03A0163\"}</code></p> </li> <li> <p>Index is now <code>183</code>.</p> </li> </ul>"},{"location":"qris/#iteration-12","title":"Iteration 12:","text":"<ul> <li>qr_id: <code>63</code></li> <li>qr_id_length: <code>04</code></li> <li>qr_id_value_length: <code>4</code></li> <li>qr_id_value: <code>A402</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\", \"52\": \"8398\", \"53\": \"360\", \"58\": \"ID\", \"59\": \"Baznas\", \"60\": \"Jakarta Pusat\", \"61\": \"10340\", \"62-07\": \"03A0163\", \"63\": \"A402\"}</code></p> </li> <li> <p>Index is now <code>191</code>, which is the end of the input string.</p> </li> </ul>"},{"location":"qris/#3-call-qris_processor","title":"3. Call <code>qris_processor</code>","text":"<ul> <li>After all data is parsed, <code>qris_processor</code> maps the data from <code>Result</code> to the attributes in <code>QrisData</code>.</li> <li>Raw in <code>qris_data</code> is set with the <code>input_string</code>.</li> </ul>"},{"location":"qris/#4-validate-qris","title":"4. Validate QRIS:","text":"<ul> <li>Check if <code>merchant_account_2.identifier</code> is equal to <code>'ID.CO.QRIS.WWW'</code>.</li> <li>If true, return <code>qris_data</code>.</li> <li>If false, return <code>None</code>.</li> </ul>"},{"location":"qris/#5-final-output","title":"5. Final Output","text":"<ul> <li>Based on the example, the QRIS data is valid, and the processed <code>qris_data</code> will be returned, containing complete information such as <code>merchant_name</code> (<code>Baznas</code>), <code>merchant_city</code> (<code>Jakarta Pusat</code>), <code>amount</code>, and others according to the parsed result.</li> </ul>"},{"location":"qris/#core-reference","title":"Core reference","text":"<p>utsmannn/qris_parser.py</p>"},{"location":"id/endpoint/#overview","title":"Overview","text":"<p>Selamat datang di dokumentasi API PPOB. API ini menyediakan berbagai endpoint untuk mengelola autentikasi pengguna, daftar produk, transaksi saldo, dan transaksi produk.</p> <p>Server URL: <pre><code>https://ppob-fake-api.fly.dev\n</code></pre></p> <p>API Version: <code>1.0.0</code></p>"},{"location":"id/endpoint/#request-new-transaction","title":"Request New Transaction","text":"<p>POST <code>/api/v1/transaction</code></p> <ul> <li>Summary: Preliminary step that validates and prepares the transaction details before the actual execution,   ensuring all conditions are met before processing.</li> <li>Tags: Product Transaction</li> </ul> Content Example Header ParameterRequest BodyResponse Name In Type Required Description Authorization header string Yes Bearer token for authorization Name Type Required Description product_code string Yes Code of the product recipient_number string Yes Recipient's number <pre><code>{\n  \"product_code\": \"PROD001\",\n  \"recipient_number\": \"1234567890\"\n}\n</code></pre> Name Type Required Description message string Yes Response message status boolean Yes Status of the transaction request data object Yes Transaction data id string Yes Transaction ID product_code string Yes Product code user_id string Yes User ID amount integer Yes Amount of the transaction date string Yes Transaction date status string Yes Status of the transaction recipient_number string Yes Recipient's number prepaid_account object Yes Prepaid account information description string Yes Description of the transaction <pre><code>{\n  \"message\": \"Transaction requested successfully\",\n  \"status\": true,\n  \"data\": {\n    \"id\": \"transaction_id\",\n    \"product_code\": \"PROD001\",\n    \"user_id\": \"user_id\",\n    \"amount\": 105000,\n    \"date\": \"2024-08-24T10:00:00Z\",\n    \"status\": \"PENDING\",\n    \"recipient_number\": \"1234567890\",\n    \"prepaid_account\": {\n      \"name\": \"John Doe\",\n      \"number\": \"1234567890\"\n    },\n    \"description\": \"Pulsa Telkomsel 10K\"\n  }\n}\n</code></pre> Request Example <pre><code>curl --location --request POST 'https://ppob-fake-api.fly.dev/api/v1/transaction' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTcyNDQ4NDI1NSwianRpIjoiMWQ0NmIyZjItZTVmNS00ZjE1LThiZjUtOWRjNDYzOTlhNmI2IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImU2YzAyZDFmLWRiOGItNGM4NS1iNjdjLWVmMDYzYzlkOGViMiIsIm5iZiI6MTcyNDQ4NDI1NSwiY3NyZiI6IjIwMzJhYTVjLWMyZDgtNGM2Mi1hNWQxLWQ0Nzk5M2FiNTA0ZSIsImV4cCI6MTcyNDU3MDY1NX0.4NlV9KSzceHFPstFTr073Lo5V5i4_1q1KNBnkLYDFaI' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"product_code\": \"string\",\n    \"recipient_number\": \"string\"\n}'\n</code></pre>"},{"location":"id/endpoint/#execute-transaction","title":"Execute Transaction","text":"<p>POST <code>/api/v1/transaction/execute</code></p> <ul> <li>Summary: After you created the transaction, you must execute with your password and impacted to your balance</li> <li>Tags: Product Transaction</li> </ul> Content Example Header ParameterRequest BodyResponse Body Name In Type Required Description Authorization header string Yes Bearer token for authorization Name Type Required Description transaction_id string Yes Id of transaction password string Yes Your password account <pre><code>{\n  \"transaction_id\": \"qwerty\",\n  \"password\": \"12345\"\n}\n</code></pre> Name Type Required Description message string Yes Response message status boolean Yes Status of the transaction execution data object Yes Transaction data id string Yes Transaction ID product_code string Yes Product code user_id string Yes User ID amount integer Yes Amount of the transaction date string Yes Transaction date status string Yes Status of the transaction recipient_number string Yes Recipient's number prepaid_account object No Prepaid account information (if applicable) description string Yes Description of the transaction <pre><code>{\n  \"message\": \"Transaction executed successfully\",\n  \"status\": true,\n  \"data\": {\n    \"id\": \"transaction_id\",\n    \"product_code\": \"PROD001\",\n    \"user_id\": \"user_id\",\n    \"amount\": 105000,\n    \"date\": \"2024-08-24T10:00:00Z\",\n    \"status\": \"COMPLETED\",\n    \"recipient_number\": \"1234567890\",\n    \"prepaid_account\": {\n      \"name\": \"John Doe\",\n      \"number\": \"1234567890\"\n    },\n    \"description\": \"Pulsa Telkomsel 10K\"\n  }\n}\n</code></pre> Request Example <pre><code>curl --location --request POST 'https://ppob-fake-api.fly.dev/api/v1/transaction/execute' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTcyNDQ4NDI1NSwianRpIjoiMWQ0NmIyZjItZTVmNS00ZjE1LThiZjUtOWRjNDYzOTlhNmI2IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImU2YzAyZDFmLWRiOGItNGM4NS1iNjdjLWVmMDYzYzlkOGViMiIsIm5iZiI6MTcyNDQ4NDI1NSwiY3NyZiI6IjIwMzJhYTVjLWMyZDgtNGM2Mi1hNWQxLWQ0Nzk5M2FiNTA0ZSIsImV4cCI6MTcyNDU3MDY1NX0.4NlV9KSzceHFPstFTr073Lo5V5i4_1q1KNBnkLYDFaI' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"transaction_id\": \"string\",\n    \"password\": \"string\"\n}'\n</code></pre>"},{"location":"id/endpoint/#get-all-history-transaction","title":"Get All History Transaction","text":"<p>GET <code>/api/v1/transaction</code></p> <ul> <li>Summary: Get all transaction history</li> <li>Tags: Product Transaction</li> </ul> Content Example Header ParameterResponse Name In Type Required Description Authorization header string Yes Bearer token for authorization Name Type Required Description message string Yes Response message status boolean Yes Status of the operation data array Yes List of transactions id string Yes Transaction ID product_code string Yes Product code user_id string Yes User ID amount integer Yes Amount of the transaction date string Yes Transaction date status string Yes Status of the transaction recipient_number string Yes Recipient's number prepaid_account object No Prepaid account information (if applicable) description string Yes Description of the transaction Request Example <pre><code>curl --location --request GET 'https://ppob-fake-api.fly.dev/api/v1/transaction' \\\n--header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTcyNDQ4NDI1NSwianRpIjoiMWQ0NmIyZjItZTVmNS00ZjE1LThiZjUtOWRjNDYzOTlhNmI2IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImU2YzAyZDFmLWRiOGItNGM4NS1iNjdjLWVmMDYzYzlkOGViMiIsIm5iZiI6MTcyNDQ4NDI1NSwiY3NyZiI6IjIwMzJhYTVjLWMyZDgtNGM2Mi1hNWQxLWQ0Nzk5M2FiNTA0ZSIsImV4cCI6MTcyNDU3MDY1NX0.4NlV9KSzceHFPstFTr073Lo5V5i4_1q1KNBnkLYDFaI' \\\n</code></pre>"},{"location":"id/","title":"Payment Point Online Banking Fake REST API","text":"<p>Selamat datang di dokumentasi API PPOB (Payment Point Online Banking / Bill Payment Service). API ini menyediakan berbagai endpoint untuk mengelola autentikasi pengguna, daftar produk, transaksi saldo, dan transaksi produk.</p> <p>Berhentilah mencari API yang sempurna untuk praktik proyek kamu. Mulailah menggunakan API ini, karena dibangun berdasarkan wawasan industri yang ada.</p>"},{"location":"id/payment-simulation/","title":"Simulasi Pembayaran","text":"<p>Dalam API ini, \"pembayaran\" untuk isi saldo adalah Pembayaran Palsu menggunakan Xendit Test Environment. Pembayaran Palsu ini dapat digunakan untuk menguji dan memvalidasi alur isi saldo tanpa melakukan transaksi nyata. Berikut adalah penjelasan spesifiknya:</p>"},{"location":"id/payment-simulation/#top-up-balance-api","title":"Top-Up Balance API","text":"<p>Dalam API isi saldo, \"pembayaran palsu\" memungkinkan pengembang untuk mengirim permintaan isi saldo menggunakan metode pembayaran yang disimulasikan. Meskipun permintaan ini diproses oleh API seperti permintaan isi saldo nyata, tidak ada uang yang benar-benar ditransfer, dan transaksi tidak dilanjutkan dengan gateway pembayaran.</p>"},{"location":"id/payment-simulation/#key-points","title":"Key Points","text":"<p>Purpose: Memungkinkan pengujian alur isi saldo penuh, termasuk pembuatan transaksi, validasi, pembaruan status, dan penanganan tanggapan, tanpa melibatkan uang nyata.</p> <p>Impact: Ini hanyalah simulasi, sehingga saldo pengguna sebenarnya tidak akan bertambah, dan tidak ada koneksi yang dibuat ke gateway pembayaran.</p>"},{"location":"id/payment-simulation/#simulation-steps-for-fake-payment","title":"Simulation Steps for Fake Payment","text":"Kunjungi URL PembayaranSimulasikan PembayaranPeriksa Saldo Akun dan Status Invoice <p>Setelah memulai permintaan top-up (<code>POST /api/v1/topup_balance</code>), respons akan menyertakan invoice_url. Pengguna harus mengunjungi <code>invoice_url</code> yang diberikan untuk mensimulasikan proses pembayaran.</p> <p></p> <p>Di halaman pembayaran, ikuti instruksi untuk menyelesaikan pembayaran palsu. Setelah pembayaran simulasi selesai, halaman akan mengarahkan ke halaman kosong dengan pesan \"Thank you for your payment\".</p> <p></p> <p>Setelah melihat pesan \"Thank you for your payment\", saldo akun pengguna akan diperbarui. Status faktur top-up akan berubah menjadi \"PAID\". Simulasi ini memungkinkan pengguna untuk menguji alur pembayaran penuh seolah-olah itu adalah transaksi nyata, memastikan bahwa proses top-up berfungsi dengan benar di dalam API.</p>"},{"location":"id/qris/","title":"QRIS Information","text":"<p>Sebelum anda melakukan transaksi menggunakan QRIS pada endpoint POST <code>/api/v1/transaction/qris</code>, mungkin anda butuh untuk menterjemahkan code QRIS menjadi informasi untuk ditampilkan pada aplikasi anda. Untuk itu saya menyediakan sebuah endpoint khusus dan terlepas dari versioning <code>/api/v1/</code>.</p>"},{"location":"id/qris/#struktur-qris-untuk-parsing-dan-penjelasannya","title":"Struktur QRIS untuk Parsing dan Penjelasannya","text":"<p>QRIS (Quick Response Code Indonesian Standard) adalah standar kode QR yang digunakan di Indonesia untuk memfasilitasi pembayaran digital. Struktur QRIS mengikuti format EMVCo yang mencakup berbagai elemen data yang diparsing dari kode QR. Berikut adalah struktur umum QRIS dan penjelasan dari masing-masing elemennya:</p>"},{"location":"id/qris/#1-payload-format-indicator-id-00","title":"1. Payload Format Indicator (ID 00)","text":"<ul> <li>Format: Dua digit</li> <li>Deskripsi: Indikator versi format, umumnya bernilai \"01\" untuk QRIS.</li> </ul>"},{"location":"id/qris/#2-point-of-initiation-method-id-01","title":"2. Point of Initiation Method (ID 01)","text":"<ul> <li>Format: Dua digit</li> <li>Deskripsi: Metode inisiasi, bernilai \"11\" jika QR statis (untuk transaksi banyak kali) atau \"12\" jika QR dinamis (   untuk transaksi sekali).</li> </ul>"},{"location":"id/qris/#3-merchant-account-information-id-26-51","title":"3. Merchant Account Information (ID 26-51)","text":"<ul> <li>Format: Struktur data yang terdiri dari sub-elemen</li> <li>Deskripsi: Informasi terkait akun merchant, dapat mencakup beberapa sub-elemen, seperti:<ul> <li>ID 00: Globally Unique Identifier (GUID) untuk merchant.</li> <li>ID 01: Nomor ID merchant.</li> <li>ID 02: PAN (Primary Account Number) merchant.</li> <li>ID 03: Kriteria spesifik merchant.</li> </ul> </li> </ul>"},{"location":"id/qris/#4-merchant-category-code-id-52","title":"4. Merchant Category Code (ID 52)","text":"<ul> <li>Format: Empat digit</li> <li>Deskripsi: Kode yang menunjukkan kategori bisnis merchant (e.g., 5311 untuk supermarket).</li> </ul>"},{"location":"id/qris/#5-transaction-currency-id-53","title":"5. Transaction Currency (ID 53)","text":"<ul> <li>Format: Tiga digit</li> <li>Deskripsi: Kode mata uang transaksi, umumnya \"360\" untuk IDR (Rupiah Indonesia).</li> </ul>"},{"location":"id/qris/#6-transaction-amount-id-54","title":"6. Transaction Amount (ID 54)","text":"<ul> <li>Format: Nilai angka</li> <li>Deskripsi: Jumlah nominal transaksi, bisa kosong jika menggunakan QR statis.</li> </ul>"},{"location":"id/qris/#7-tip-or-convenience-fee-indicator-id-55","title":"7. Tip or Convenience Fee Indicator (ID 55)","text":"<ul> <li>Format: Dua digit</li> <li>Deskripsi: Indikator tip atau biaya layanan.</li> </ul>"},{"location":"id/qris/#8-country-code-id-58","title":"8. Country Code (ID 58)","text":"<ul> <li>Format: Dua karakter</li> <li>Deskripsi: Kode negara, umumnya \"ID\" untuk Indonesia.</li> </ul>"},{"location":"id/qris/#9-merchant-name-id-59","title":"9. Merchant Name (ID 59)","text":"<ul> <li>Format: String (alfanumerik)</li> <li>Deskripsi: Nama merchant.</li> </ul>"},{"location":"id/qris/#10-merchant-city-id-60","title":"10. Merchant City (ID 60)","text":"<ul> <li>Format: String (alfanumerik)</li> <li>Deskripsi: Kota tempat merchant berada.</li> </ul>"},{"location":"id/qris/#11-postal-code-id-61","title":"11. Postal Code (ID 61)","text":"<ul> <li>Format: String (alfanumerik)</li> <li>Deskripsi: Kode pos lokasi merchant.</li> </ul>"},{"location":"id/qris/#12-additional-data-field-template-id-62","title":"12. Additional Data Field Template (ID 62)","text":"<ul> <li>Format: Struktur data yang terdiri dari sub-elemen</li> <li>Deskripsi: Informasi tambahan yang mungkin diperlukan, seperti:<ul> <li>ID 01: Label referensi.</li> <li>ID 05: Label terminal.</li> <li>ID 07: Label pengguna.</li> </ul> </li> </ul>"},{"location":"id/qris/#13-crc-id-63","title":"13. CRC (ID 63)","text":"<ul> <li>Format: Empat digit heksadesimal</li> <li>Deskripsi: Cyclic Redundancy Check (CRC) untuk validasi integritas data.</li> </ul>"},{"location":"id/qris/#penjelasan-tambahan","title":"Penjelasan Tambahan:","text":"<ol> <li> <p>Penggunaan ID dan Sub-ID: Struktur QRIS menggunakan ID untuk menandai berbagai elemen data, dan beberapa elemen    seperti Merchant Account Information dan Additional Data Field Template dapat memiliki sub-ID.</p> </li> <li> <p>Panjang Data: Setiap ID diikuti oleh dua digit yang menunjukkan panjang data dalam karakter, diikuti oleh data    aktual. Contohnya, <code>010211</code> berarti ID 01 (Point of Initiation Method) memiliki panjang data 02 karakter dengan    nilai \"11\".</p> </li> <li> <p>Parsing: Untuk memparsing QRIS, prosesnya melibatkan pembacaan ID, mengekstrak panjang data, dan kemudian    mengambil data yang sesuai. Data kemudian dapat diproses lebih lanjut atau ditampilkan sesuai kebutuhan.</p> </li> </ol>"},{"location":"id/qris/#langkah-langkah-parsing","title":"Langkah-langkah Parsing","text":""},{"location":"id/qris/#contoh-qris","title":"Contoh QRIS:","text":"<p>Berikut adalah penjelasan step by step untuk memproses QRIS berdasarkan contoh input berikut:</p> <pre><code>00020101021126550016ID.CO.SHOPEE.WWW01189360091800000000180202180303UBE51440014ID.CO.QRIS.WWW0215ID20190022915550303UBE5204839853033605802ID5906Baznas6013Jakarta Pusat61051034062070703A016304A402\n</code></pre>"},{"location":"id/qris/#1-memulai-parse_qris","title":"1. Memulai <code>parse_qris</code>:","text":"<ul> <li>Index dimulai dari <code>0</code>.</li> <li>Result adalah dictionary kosong.</li> </ul>"},{"location":"id/qris/#2-memproses-qris-secara-bertahap","title":"2. Memproses QRIS secara bertahap:","text":""},{"location":"id/qris/#iterasi-1","title":"Iterasi 1:","text":"<ul> <li>qr_id: <code>00</code> (dari index <code>0-2</code>)</li> <li>qr_id_length: <code>02</code> (dari index <code>2-4</code>)</li> <li>qr_id_value_length: <code>2</code></li> <li>qr_id_value: <code>01</code> (dari index <code>4-6</code>)</li> <li> <p>Result: <code>{\"00\": \"01\"}</code></p> </li> <li> <p>Index sekarang menjadi <code>6</code>.</p> </li> </ul>"},{"location":"id/qris/#iterasi-2","title":"Iterasi 2:","text":"<ul> <li>qr_id: <code>01</code></li> <li>qr_id_length: <code>02</code></li> <li>qr_id_value_length: <code>2</code></li> <li>qr_id_value: <code>11</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\"}</code></p> </li> <li> <p>Index sekarang menjadi <code>10</code>.</p> </li> </ul>"},{"location":"id/qris/#iterasi-3","title":"Iterasi 3:","text":"<ul> <li>qr_id: <code>26</code> (Merupakan Merchant Account)</li> <li>qr_id_length: <code>55</code></li> <li>qr_id_value_length: <code>55</code></li> <li>qr_id_value: <code>0016ID.CO.SHOPEE.WWW01189360091800000000180202180303UBE</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26\": \"0016ID.CO.SHOPEE.WWW01189360091800000000180202180303UBE\"}</code></p> </li> <li> <p>Index sekarang menjadi <code>69</code>.</p> </li> </ul> <p>Nested Iterasi dalam <code>26</code>:</p> <ul> <li>nqi: <code>00</code></li> <li>nqi_length: <code>16</code></li> <li>nqi_value: <code>ID.CO.SHOPEE.WWW</code></li> <li> <p>Result:   <code>{\"00\": \"01\", \"01\": \"11\", \"26\": \"0016ID.CO.SHOPEE.WWW01189360091800000000180202180303UBE\", \"26-00\": \"ID.CO.SHOPEE.WWW\"}</code></p> </li> <li> <p>nqi: <code>01</code></p> </li> <li>nqi_length: <code>18</code></li> <li>nqi_value: <code>936009180000000018</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\"}</code></p> </li> <li> <p>nqi: <code>02</code></p> </li> <li>nqi_length: <code>02</code></li> <li>nqi_value: <code>18</code></li> <li> <p>Result: <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\"}</code></p> </li> <li> <p>nqi: <code>03</code></p> </li> <li>nqi_length: <code>03</code></li> <li>nqi_value: <code>UBE</code></li> <li>Result:   <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\"}</code></li> </ul>"},{"location":"id/qris/#iterasi-4","title":"Iterasi 4:","text":"<ul> <li>qr_id: <code>51</code> (Merupakan Merchant Account 2)</li> <li>qr_id_length: <code>44</code></li> <li>qr_id_value_length: <code>44</code></li> <li>qr_id_value: <code>0014ID.CO.QRIS.WWW0215ID20190022915550303UBE</code></li> <li> <p>Result:   <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51\": \"0014ID.CO.QRIS.WWW0215ID20190022915550303UBE\"}</code></p> </li> <li> <p>Index sekarang menjadi <code>117</code>.</p> </li> </ul> <p>Nested Iterasi dalam <code>51</code>:</p> <ul> <li>nqi: <code>00</code></li> <li>nqi_length: <code>14</code></li> <li>nqi_value: <code>ID.CO.QRIS.WWW</code></li> <li> <p>Result:   <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\"}</code></p> </li> <li> <p>nqi: <code>02</code></p> </li> <li>nqi_length: <code>15</code></li> <li>nqi_value: <code>ID2019002291555</code></li> <li> <p>Result:   <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\"}</code></p> </li> <li> <p>nqi: <code>03</code></p> </li> <li>nqi_length: <code>03</code></li> <li>nqi_value: <code>UBE</code></li> <li>Result:   <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\"}</code></li> </ul>"},{"location":"id/qris/#iterasi-5","title":"Iterasi 5:","text":"<ul> <li>qr_id: <code>52</code></li> <li>qr_id_length: <code>04</code></li> <li>qr_id_value_length: <code>4</code></li> <li>qr_id_value: <code>8398</code></li> <li> <p>Result:   <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\", \"52\": \"8398\"}</code></p> </li> <li> <p>Index sekarang menjadi <code>127</code>.</p> </li> </ul>"},{"location":"id/qris/#iterasi-6","title":"Iterasi 6:","text":"<ul> <li>qr_id: <code>53</code></li> <li>qr_id_length: <code>03</code></li> <li>qr_id_value_length: <code>3</code></li> <li>qr_id_value: <code>360</code></li> <li> <p>Result:   <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\", \"52\": \"8398\", \"53\": \"360\"}</code></p> </li> <li> <p>Index sekarang menjadi <code>134</code>.</p> </li> </ul>"},{"location":"id/qris/#iterasi-7","title":"Iterasi 7:","text":"<ul> <li>qr_id: <code>58</code></li> <li>qr_id_length: <code>02</code></li> <li>qr_id_value_length: <code>2</code></li> <li>qr_id_value: <code>ID</code></li> <li> <p>Result:   <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\", \"52\": \"8398\", \"53\": \"360\", \"58\": \"ID\"}</code></p> </li> <li> <p>Index sekarang menjadi <code>138</code>.</p> </li> </ul>"},{"location":"id/qris/#iterasi-8","title":"Iterasi 8:","text":"<ul> <li>qr_id: <code>59</code></li> <li>qr_id_length: <code>06</code></li> <li>qr_id_value_length: <code>6</code></li> <li>qr_id_value: <code>Baznas</code></li> <li> <p>Result:   <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\", \"52\": \"8398\", \"53\": \"360\", \"58\": \"ID\", \"59\": \"Baznas\"}</code></p> </li> <li> <p>Index sekarang menjadi <code>148</code>.</p> </li> </ul>"},{"location":"id/qris/#iterasi-9","title":"Iterasi 9:","text":"<p>-</p> <p>qr_id: <code>60</code></p> <ul> <li>qr_id_length: <code>13</code></li> <li>qr_id_value_length: <code>13</code></li> <li>qr_id_value: <code>Jakarta Pusat</code></li> <li> <p>Result:   <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\", \"52\": \"8398\", \"53\": \"360\", \"58\": \"ID\", \"59\": \"Baznas\", \"60\": \"Jakarta Pusat\"}</code></p> </li> <li> <p>Index sekarang menjadi <code>165</code>.</p> </li> </ul>"},{"location":"id/qris/#iterasi-10","title":"Iterasi 10:","text":"<ul> <li>qr_id: <code>61</code></li> <li>qr_id_length: <code>05</code></li> <li>qr_id_value_length: <code>5</code></li> <li>qr_id_value: <code>10340</code></li> <li> <p>Result:   <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\", \"52\": \"8398\", \"53\": \"360\", \"58\": \"ID\", \"59\": \"Baznas\", \"60\": \"Jakarta Pusat\", \"61\": \"10340\"}</code></p> </li> <li> <p>Index sekarang menjadi <code>174</code>.</p> </li> </ul>"},{"location":"id/qris/#iterasi-11","title":"Iterasi 11:","text":"<ul> <li>qr_id: <code>62</code> (Additional Info)</li> <li>qr_id_length: <code>07</code></li> <li>qr_id_value_length: <code>7</code></li> <li>qr_id_value: <code>03A0163</code></li> <li> <p>Result:   <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\", \"52\": \"8398\", \"53\": \"360\", \"58\": \"ID\", \"59\": \"Baznas\", \"60\": \"Jakarta Pusat\", \"61\": \"10340\", \"62\": \"03A0163\"}</code></p> </li> <li> <p>Index sekarang menjadi <code>183</code>.</p> </li> </ul>"},{"location":"id/qris/#iterasi-12","title":"Iterasi 12:","text":"<ul> <li>qr_id: <code>63</code></li> <li>qr_id_length: <code>04</code></li> <li>qr_id_value_length: <code>4</code></li> <li>qr_id_value: <code>A402</code></li> <li> <p>Result:   <code>{\"00\": \"01\", \"01\": \"11\", \"26-00\": \"ID.CO.SHOPEE.WWW\", \"26-01\": \"936009180000000018\", \"26-02\": \"18\", \"26-03\": \"UBE\", \"51-00\": \"ID.CO.QRIS.WWW\", \"51-02\": \"ID2019002291555\", \"51-03\": \"UBE\", \"52\": \"8398\", \"53\": \"360\", \"58\": \"ID\", \"59\": \"Baznas\", \"60\": \"Jakarta Pusat\", \"61\": \"10340\", \"62-07\": \"03A0163\", \"63\": \"A402\"}</code></p> </li> <li> <p>Index sekarang menjadi <code>191</code>, yang merupakan akhir dari string input.</p> </li> </ul>"},{"location":"id/qris/#3-memanggil-qris_processor","title":"3. Memanggil <code>qris_processor</code>","text":"<ul> <li>Setelah semua data diparsing, <code>qris_processor</code> akan memetakan data dari <code>Result</code> ke atribut <code>QrisData</code>.</li> <li>Raw dari <code>qris_data</code> diisi dengan <code>input_string</code>.</li> </ul>"},{"location":"id/qris/#4-memvalidasi-qris","title":"4. Memvalidasi QRIS:","text":"<ul> <li>Memeriksa apakah <code>merchant_account_2.identifier</code> sama dengan <code>'ID.CO.QRIS.WWW'</code>.</li> <li>Jika ya, kembalikan <code>qris_data</code>.</li> <li>Jika tidak, kembalikan <code>None</code>.</li> </ul>"},{"location":"id/qris/#5-hasil-akhir","title":"5. Hasil Akhir","text":"<ul> <li>Berdasarkan contoh di atas, data QRIS valid, dan <code>qris_data</code> yang diproses akan dikembalikan, berisi informasi lengkap   seperti <code>merchant_name</code> (<code>Baznas</code>), <code>merchant_city</code> (<code>Jakarta Pusat</code>), <code>amount</code>, dan lainnya sesuai dengan hasil   parsing.</li> </ul>"}]}